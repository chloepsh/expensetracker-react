{"version":3,"sources":["Components/NewExpense/ExpenseForm.js","Components/NewExpense/NewExpense.js","Components/UI/Card.js","Components/Expenses/ExpensesFilter.js","Components/Expenses/ExpenseDate.js","Components/Expenses/ExpenseItem.js","Components/Expenses/ExpensesList.js","Components/Chart/ChartBar.js","Components/Chart/Chart.js","Components/Expenses/ExpensesChart.js","Components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancelEdit","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items2","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","items","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"wbAgFeA,EA7EK,SAACC,GACnB,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAkCA,OACE,uBAAMC,SAjBc,SAACC,GACrBA,EAAMC,iBAEN,IAAMC,EAAc,CAClBC,MAAOV,EACPW,QAAST,EACTU,KAAM,IAAIC,KAAKT,IAGjBN,EAAMgB,kBAAkBL,GACxBR,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,GAChB,EAIC,UACE,sBAAKU,UAAU,wBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,0CACA,uBACEC,KAAK,OACLC,MAAOjB,EACPkB,SAvCiB,SAACX,GAC1BN,EAAgBM,EAAMY,OAAOF,MAE9B,OAuCK,sBAAKF,UAAU,uBAAf,UACE,2CACA,uBACEC,KAAK,SACLI,IAAI,OACJC,KAAK,OACLJ,MAAOf,EACPgB,SA5CkB,SAACX,GAC3BJ,EAAiBI,EAAMY,OAAOF,MAE/B,OA4CK,sBAAKF,UAAU,uBAAf,UACE,yCACA,uBACEC,KAAK,OACLI,IAAI,aACJE,IAAI,aACJL,MAAOb,EACPc,SAjDgB,SAACX,GACzBF,EAAeE,EAAMY,OAAOF,MAE7B,UAkDG,sBAAKF,UAAU,uBAAf,UACE,wBAAQC,KAAK,SAASO,QAASzB,EAAM0B,aAArC,oBACA,wBAAQR,KAAK,SAAb,8BAIP,EC5CcS,G,MA9BI,SAAC3B,GAClB,IAQA,EAAkCC,oBAAS,GAA3C,mBAAO2B,EAAP,KAAkBC,EAAlB,KAUA,OACE,sBAAKZ,UAAU,cAAf,WACIW,GAAa,wBAAQH,QAVC,WAC1BI,GAAa,EACd,EAQkB,6BACdD,GAAa,cAAC,EAAD,CACZZ,kBAtByB,SAACc,GAC9B,IAAMnB,EAAW,2BACZmB,GADY,IAEfC,GAAIC,KAAKC,SAASC,aAEpBlC,EAAMmC,aAAaxB,GACnBkB,GAAa,EACd,EAgBKH,aATqB,WACzBG,GAAa,EACd,MAWF,G,MCzBcO,MALf,SAAcpC,GACV,IAAMqC,EAAU,QAAUrC,EAAMiB,UAChC,OAAO,qBAAKA,UAAWoB,EAAhB,SAA0BrC,EAAMsC,UAC1C,ECmBcC,G,MApBQ,SAACvC,GAKtB,OACE,qBAAKiB,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQE,MAAOnB,EAAMwC,SAAUpB,SARP,SAACX,GAC7BT,EAAMyC,eAAehC,EAAMY,OAAOF,MACnC,EAMK,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,yBAKT,G,YCLcuB,MAdf,SAAqB1C,GAAO,IAAD,MACjB2C,EAAK,UAAG3C,EAAMc,YAAT,aAAG,EAAY8B,eAAe,QAAS,CAAED,MAAO,SACrDE,EAAG,UAAG7C,EAAMc,YAAT,aAAG,EAAY8B,eAAe,QAAS,CAAEC,IAAK,YACjDC,EAAI,UAAG9C,EAAMc,YAAT,aAAG,EAAYiC,cAEzB,OACI,sBAAK9B,UAAU,eAAf,UACI,qBAAKA,UAAU,sBAAf,SAAsC0B,IACtC,qBAAK1B,UAAU,qBAAf,SAAqC6B,IACrC,qBAAK7B,UAAU,oBAAf,SAAoC4B,MAG/C,ECKcG,G,MAfK,SAAChD,GACnB,OACE,6BACE,eAAC,EAAD,CAAMiB,UAAU,eAAhB,UACE,cAAC,EAAD,CAAaH,KAAMd,EAAMc,OACzB,sBAAKG,UAAU,4BAAf,UACE,6BAAKjB,EAAMY,QACX,sBAAKK,UAAU,sBAAf,cAAuCjB,EAAMa,iBAMtD,GCKcoC,EAlBM,SAACjD,GAClB,OAA4B,IAAxBA,EAAMkD,OAAOC,OACN,oBAAIlC,UAAU,0BAAd,gCAGP,oBAAIA,UAAU,gBAAd,SACKjB,EAAMkD,OAAOE,KAAI,SAACC,GAAD,OACd,cAAC,EAAD,CAEIzC,MAAOyC,EAAQzC,MACfC,OAAQwC,EAAQxC,OAChBC,KAAMuC,EAAQvC,MAHTuC,EAAQtB,GAFH,KAU7B,E,OCEcuB,G,MApBE,SAACtD,GACd,IAAIuD,EAAgB,KAMpB,OAJIvD,EAAMwD,SAAW,IACjBD,EAAgBvB,KAAKyB,MAAOzD,EAAMmB,MAAQnB,EAAMwD,SAAY,KAAO,KAInE,sBAAKvC,UAAU,YAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,qBACIA,UAAU,kBACVyC,MAAO,CAACC,OAAQJ,OAGxB,qBAAKtC,UAAU,mBAAf,SAAmCjB,EAAM4D,UAGpD,GCCcC,G,MAlBD,SAAC7D,GACX,IAAM8D,EAAkB9D,EAAM+D,WAAWX,KAAI,SAAAY,GAAS,OAAIA,EAAU7C,KAAd,IAChD8C,EAAejC,KAAKR,IAAL,MAAAQ,KAAI,YAAQ8B,IAEjC,OACI,sBAAK7C,UAAU,QAAf,UACKjB,EAAM+D,WAAWX,KAAI,SAAAY,GAAS,OAC3B,cAAC,EAAD,CAEI7C,MAAQ6C,EAAU7C,MAClBqC,SAAUS,EACVL,MAAQI,EAAUJ,OAHZI,EAAUJ,MAFO,IADnC,MAWP,GCQcM,EAxBO,SAAClE,GACnB,IAD6B,EACvBmE,EAAkB,CACpB,CAAEP,MAAM,MAAOzC,MAAO,GACtB,CAAEyC,MAAM,MAAOzC,MAAO,GACtB,CAAEyC,MAAM,MAAOzC,MAAO,GACtB,CAAEyC,MAAM,MAAOzC,MAAO,GACtB,CAAEyC,MAAM,MAAOzC,MAAO,GACtB,CAAEyC,MAAM,MAAOzC,MAAO,GACtB,CAAEyC,MAAM,MAAOzC,MAAO,GACtB,CAAEyC,MAAM,MAAOzC,MAAO,GACtB,CAAEyC,MAAM,MAAOzC,MAAO,GACtB,CAAEyC,MAAM,MAAOzC,MAAO,GACtB,CAAEyC,MAAM,MAAOzC,MAAO,GACtB,CAAEyC,MAAM,MAAOzC,MAAO,IAbG,cAgBPnB,EAAMoE,UAhBC,IAgB7B,2BAAsC,CAAC,IAA5Bf,EAA2B,QAElCc,EADqBd,EAAQvC,KAAKuD,YACJlD,OAASkC,EAAQxC,MAClD,CAnB4B,+BAqB7B,OAAO,cAAC,EAAD,CAAOkD,WAAYI,GAC7B,ECMcG,G,MAzBE,SAACtE,GAChB,MAAwCC,mBAAS,QAAjD,mBAAOsE,EAAP,KAAqBC,EAArB,KAMMC,EAAmBzE,EAAM0E,MAAMC,QAAQ,SAAAtB,GAC3C,OAAOA,EAAQvC,KAAKiC,cAAcb,aAAeqC,CAClD,IAED,OACE,8BACI,eAAC,EAAD,CAAMtD,UAAU,WAAhB,UACE,cAAC,EAAD,CACEuB,SAAU+B,EACV9B,eAbkB,SAACmC,GAC3BJ,EAAgBI,EACjB,IAaO,cAAC,EAAD,CAAeR,SAAUK,IACzB,cAAC,EAAD,CAAcvB,OAASuB,QAIhC,GC1BKI,EAAiB,CACrB,CACE9C,GAAI,KACJnB,MAAO,WACPC,OAAQ,MACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAE1B,CAAEgB,GAAI,KAAMnB,MAAO,SAAUC,OAAQ,OAAQC,KAAM,IAAIC,KAAK,KAAM,EAAG,KACrE,CACEgB,GAAI,KACJnB,MAAO,gBACPC,OAAQ,OACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAE1B,CACEgB,GAAI,KACJnB,MAAO,cACPC,OAAQ,IACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,MAuBb+D,EAnBH,WACV,MAAgC7E,mBAAS4E,GAAzC,mBAAOT,EAAP,KAAiBW,EAAjB,KAUA,OACE,gCACE,cAAC,EAAD,CAAY5C,aAVU,SAACkB,GACzB0B,GAAY,SAACC,GACX,MAAM,CAAE3B,GAAR,mBAAoB2B,GACrB,GACF,IAOG,cAAC,EAAD,CAAUN,MAAON,MAGtB,ECrCYa,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,EAAD,I","file":"static/js/main.bc1d9b56.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className='new-expense__controls'>\r\n        <div className='new-expense__control'>\r\n          <label>Title</label>\r\n          <input\r\n            type='text'\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Amount</label>\r\n          <input\r\n            type='number'\r\n            min='0.01'\r\n            step='0.01'\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Date</label>\r\n          <input\r\n            type='date'\r\n            min='2019-01-01'\r\n            max='2022-12-31'\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='new-expense__actions'>\r\n        <button type=\"button\" onClick={props.onCancelEdit}>Cancel</button>\r\n        <button type='submit'>Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;","import React, { useState } from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString()\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(true);\r\n  };\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const startEditingHandler = () =>{\r\n    setIsEditing(true)\r\n  };\r\n\r\n  const stopEditingHandler = () =>{\r\n    setIsEditing(false)\r\n  }\r\n\r\n  return (\r\n    <div className='new-expense'>\r\n      {!isEditing && <button onClick={startEditingHandler}>Add new expense</button>}\r\n      {isEditing && <ExpenseForm \r\n        onSaveExpenseData={saveExpenseDataHandler} \r\n        onCancelEdit={stopEditingHandler}\r\n        />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;","import './Card.css'\r\n\r\nfunction Card(props){\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import React from 'react';\r\nimport './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props){\r\n    const month = props.date?.toLocaleString('en-AU', { month: 'long' });\r\n    const day = props.date?.toLocaleString('en-AU', { day: '2-digit' });\r\n    const year = props.date?.getFullYear();\r\n\r\n    return(\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","import React from 'react';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className='expense-item'>\r\n        <ExpenseDate date={props.date} />\r\n        <div className='expense-item__description'>\r\n          <h2>{props.title}</h2>\r\n          <div className='expense-item__price'>${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n    \r\n  );\r\n}\r\n\r\nexport default ExpenseItem;","import React from 'react';\r\nimport './ExpensesList.css';\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\n\r\nconst ExpensesList = (props) => {\r\n    if (props.items2.length === 0) {\r\n        return <h2 className=\"expenses-list__fallback\">No expenses found.</h2>\r\n    }\r\n    return(\r\n        <ul className='expenses-list'>\r\n            {props.items2.map((expense) =>(\r\n                <ExpenseItem\r\n                    key={expense.id}\r\n                    title={expense.title}\r\n                    amount={expense.amount}\r\n                    date={expense.date}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default ExpensesList;","import React from 'react';\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n    let barFillHeight = '0%';\r\n\r\n    if (props.maxValue > 0){\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%'\r\n    }\r\n\r\n    return(\r\n        <div className='chart-bar'>\r\n            <div className='chart-bar__inner'>\r\n                <div \r\n                    className='chart-bar__fill' \r\n                    style={{height: barFillHeight}}>\r\n                </div>\r\n            </div>\r\n            <div className='chart-bar__lable'>{props.label}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChartBar;","import React from 'react';\r\nimport ChartBar from './ChartBar.js';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n\r\n    return (\r\n        <div className='chart'>\r\n            {props.dataPoints.map(dataPoint => \r\n                <ChartBar\r\n                    key= {dataPoint.label}\r\n                    value= {dataPoint.value}\r\n                    maxValue={totalMaximum}\r\n                    label= {dataPoint.label}      \r\n                />\r\n            )};\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;","import React from 'react';\r\n\r\nimport Chart from '../Chart/Chart.js';\r\n\r\nconst ExpensesChart = (props) => {\r\n    const chartDataPoints = [\r\n        { label:'Jan', value: 0 },\r\n        { label:'Feb', value: 0 },\r\n        { label:'Mar', value: 0 },\r\n        { label:'Apr', value: 0 },\r\n        { label:'May', value: 0 },\r\n        { label:'Jun', value: 0 },\r\n        { label:'Jul', value: 0 },\r\n        { label:'Aug', value: 0 },\r\n        { label:'Sep', value: 0 },\r\n        { label:'Oct', value: 0 },\r\n        { label:'Nov', value: 0 },\r\n        { label:'Dec', value: 0 },\r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    };\r\n\r\n    return <Chart dataPoints={chartDataPoints}/>;\r\n};\r\n\r\nexport default ExpensesChart;","import React, { useState } from 'react';\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport './Expenses.css';\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState('2022');\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter( expense => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });  \r\n\r\n  return (\r\n    <div>\r\n        <Card className='expenses'>\r\n          <ExpensesFilter\r\n            selected={filteredYear}\r\n            onChangeFilter={filterChangeHandler}\r\n          />\r\n          <ExpensesChart expenses={filteredExpenses} />\r\n          <ExpensesList items2= {filteredExpenses} />\r\n        </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;","import React, { useState } from 'react';\nimport NewExpense from './Components/NewExpense/NewExpense';\nimport Expenses from './Components/Expenses/Expenses';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Internet',\n    amount: 94.12,\n    date: new Date(2021, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2022, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2019, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'Wooden desk',\n    amount: 450,\n    date: new Date(2020, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);"],"sourceRoot":""}