{"ast":null,"code":"import React from'react';import'./ChartBar.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChartBar=function ChartBar(props){var barFillHeight='0%';if(props.maxValue>0){barFillHeight=Math.round(props.value/props.maxValue*100)+'%';}return/*#__PURE__*/_jsxs(\"div\",{className:\"chart-bar\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chart-bar__inner\",children:/*#__PURE__*/_jsx(\"div\",{className:\"chart-bar__fill\",style:{height:barFillHeight}})}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-bar__lable\",children:props.label})]});};export default ChartBar;","map":{"version":3,"names":["React","ChartBar","props","barFillHeight","maxValue","Math","round","value","height","label"],"sources":["C:/Users/10216927/Desktop/Expense tracker/src/Components/Chart/ChartBar.js"],"sourcesContent":["import React from 'react';\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n    let barFillHeight = '0%';\r\n\r\n    if (props.maxValue > 0){\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%'\r\n    }\r\n\r\n    return(\r\n        <div className='chart-bar'>\r\n            <div className='chart-bar__inner'>\r\n                <div \r\n                    className='chart-bar__fill' \r\n                    style={{height: barFillHeight}}>\r\n                </div>\r\n            </div>\r\n            <div className='chart-bar__lable'>{props.label}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChartBar;"],"mappings":"AAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,MAAO,gBAAP,C,wFAEA,GAAMC,SAAQ,CAAG,QAAXA,SAAW,CAACC,KAAD,CAAW,CACxB,GAAIC,cAAa,CAAG,IAApB,CAEA,GAAID,KAAK,CAACE,QAAN,CAAiB,CAArB,CAAuB,CACnBD,aAAa,CAAGE,IAAI,CAACC,KAAL,CAAYJ,KAAK,CAACK,KAAN,CAAcL,KAAK,CAACE,QAArB,CAAiC,GAA5C,EAAmD,GAAnE,CACH,CAED,mBACI,aAAK,SAAS,CAAC,WAAf,wBACI,YAAK,SAAS,CAAC,kBAAf,uBACI,YACI,SAAS,CAAC,iBADd,CAEI,KAAK,CAAE,CAACI,MAAM,CAAEL,aAAT,CAFX,EADJ,EADJ,cAOI,YAAK,SAAS,CAAC,kBAAf,UAAmCD,KAAK,CAACO,KAAzC,EAPJ,GADJ,CAWH,CAlBD,CAoBA,cAAeR,SAAf"},"metadata":{},"sourceType":"module"}